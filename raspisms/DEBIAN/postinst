#!/bin/bash
#
#
# Verifie si il faut configurer automatiquement gammu
RED='\033[0;31m'
NC='\033[0m'

while [[ "$autogammu" != "y" && "$autogammu" != "n" ]]
do
	echo 'Il est possible de configurer automatiquement gammu. Pour cela, le module GSM gérant la carte SIM doit-être connecté à la Raspberry Pi. Voulez-vous le faire ? [y/n]';
	read autogammu;
done

if [ "$autogammu" == "y" ]
then
	gammu-detect
    gammu_detect_check=$?

    if [ "$gammu_detect_check" -eq 0 ]
    then
        do_autogammu=1
    else
        do_autogammu=0
    fi

else
    do_autogammu=0
fi

if [ "$do_autogammu" -eq 1 ]
then
	echo 'Gammu va etre configure automatiquement.'

	#On va recupérer la conf générée avec gammu-detect
	echo "Creation des fichier de configuration /etc/gammurc et /etc/gammu-smsdrc"
	gammu-detect > /etc/gammurc
	gammu-detect > /etc/gammu-smsdrc

	#On ajoute la localisation fr
	$(sed -i -e "s/\[gammu\(.\)*]/[gammu\1]\nGammuCoding = utf8\nGammuLoc = fr_FR.UTF8/g" /etc/gammu-smsdrc)

	#On va demander le code PIN
	echo "Rentrez le code PIN de votre carte SIM. (Laissez vide si elle n'a pas de code PIN)"
	read pin

	#On ajoute la configuration de gammu-smsd
	echo "# SMSD configuration, see gammu-smsdrc(5)" >> /etc/gammu-smsdrc
	echo "[smsd]" >> /etc/gammu-smsdrc
	echo "service = files" >> /etc/gammu-smsdrc
	echo "logfile = syslog" >> /etc/gammu-smsdrc
	echo "# Increase for debugging information" >> /etc/gammu-smsdrc
	echo "debuglevel = 0" >> /etc/gammu-smsdrc
	echo "RunOnReceive = /var/www/html/RaspiSMS/parseSMS.sh" >> /etc/gammu-smsdrc

	echo "# Paths where messages are stored" >> /etc/gammu-smsdrc
	echo "inboxpath = /var/spool/gammu/inbox/" >> /etc/gammu-smsdrc
	echo "outboxpath = /var/spool/gammu/outbox/" >> /etc/gammu-smsdrc
	echo "sentsmspath = /var/spool/gammu/sent/" >> /etc/gammu-smsdrc
	echo "errorsmspath = /var/spool/gammu/error/" >> /etc/gammu-smsdrc

	#Si on a bien un code PIN
	if [ "$pin" != "" ]
	then
		#On l'ajoute au fichier de configuration
		echo "Le code PIN $pin a été ajouté à la configuration de gammu"
		echo "pin = $pin" >> /etc/gammu-smsdrc
	else
		echo "Aucun code PIN ne sera utilisé."
	fi

	echo "Le fichier de configuration /etc/gammu-smsdrcrc a été généré correctement."
else
    echo "
    [gammu]
    device = /dev/ttyS0
    name = Téléphone sur le port série 0
    connection = at" >> /etc/gammu-smsdrc
	echo -e "${RED}Le fichier de configuration /etc/gammu-smsdrcrc n'a pas pu être généré. Vous devrez le configurer à la main.${NC}"
fi

#Creation du compte admin
echo "La base de données de RaspiSMS va être déployée."
random_password=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

#On kill mysql et on relance en god mode pour créer le user raspisms
echo "Création de l'utilisateur MySQL ''raspisms''"
echo "raspisms password = $random_password"
kill `cat /var/run/mysqld/mysqld.pid`

/usr/sbin/mysqld --skip-grant-tables --skip-networking &> /dev/null &

sleep 10

mysql -u root -e "FLUSH PRIVILEGES;DROP USER IF EXISTS'raspisms'@'localhost';CREATE USER 'raspisms'@'localhost' IDENTIFIED BY '$random_password';GRANT ALL PRIVILEGES ON *.* TO 'raspisms'@'localhost';FLUSH PRIVILEGES;"
ret=$?

kill `cat /var/run/mysqld/mysqld.pid`

sleep 1

/usr/sbin/mysqld &> /dev/null &

sleep 5

if [ "$ret" -ne 0 ]
then
    echo -e "${RED}Création de l'utilisateur MySQL 'raspisms' impossible. Vous devrez le créer à la main et modifier le fichier '/var/www/html/RaspiSMS/mvc/constants.php' en fonction.${NC}"
else
    echo "L'utilisateur MySQL 'raspisms' a bien été créé. Vous pouvez retrouver son mot de passe dans le fichier '/var/www/html/RaspiSMS/mvc/constants.php'."
fi

mysql -u raspisms -p$random_password < /var/www/html/RaspiSMS/createDatabase.sql

ret=$?
if [ "$ret" -ne 0 ]
then
    echo -e "${RED} Une erreur est survenue lors de la création de la base de données, effectuez cette création à la main avec la commande 'mysql -u raspisms -p$random_password < /var/www/html/RaspiSMS/createDatabase.sql'${NC}";
else
    echo "La base de données a été correctement déployée."
fi

echo "La connexion a la base de données pour RaspiSMS va être configurée avec le compte root"
sed -i -e "s/DATABASE_PASSWORD_DEFAULT_VALUE/$random_password/g" /var/www/html/RaspiSMS/mvc/constants.php


echo "RaspiSMS a été installé avec succès dans le répertoire /var/www/html/RaspiSMS.\n\n";

#On va donner les bon droits aux différents fichiers
echo "Attribution du dossier /var/www/html/RaspiSMS à l'utilisateur www-data"
chmod -R 755 /var/www/html/RaspiSMS
chown -R www-data:www-data /var/www/html/RaspiSMS

echo "Le dossier a bien été donné à www-data, avec les droits 755";
echo "Attribution du dossier /var/www/html/RaspiSMS/receiveds à l'utilisateur gammu";
chmod -R 755 /var/www/html/RaspiSMS/receiveds
chown -R gammu:gammu /var/www/html/RaspiSMS/receiveds

echo "Le dossier a bien été donné à gammu, avec les droits 755";
echo "Ajout droit d'execution sur /var/www/html/RaspiSMS/console.php";
chmod +x /var/www/html/RaspiSMS/console.php

echo "Droit d'execution ajoute";
echo "Ajout droit d'execution sur /var/www/html/RaspiSMS/parseSMS.sh";
chmod +x /var/www/html/RaspiSMS/parseSMS.sh
echo "Droit d'execution ajoute";
 
echo "Le compte administrateur pour RaspiSMS va être créé. Choisissez une adresse e-mail et un mot de passe pour ce compte"
echo "Adresse e-mail : "
read email
echo "Mot de passe : "
stty -echo
read password
stty echo
mysql -u raspisms -p$random_password -e "use raspisms;INSERT INTO users(email, password, admin) VALUES('$email', SHA1('$password'), 1)"
ret=$?

if [ "$ret" -ne 0 ]
then
    echo -e "${RED} Impossible de créer le compte administrateur pour raspisms. Vous devrez le créer vous même avec la commande MySQL INSERT INTO users(email, password, admin) VALUES('$email', SHA1('$password'), 1)${NC}"
else
    echo "Le compte administrateur a bien été créé."
fi

echo "Activation du module de réecriture d'URL d'Apache"
a2enmod rewrite

echo "Activation du fichier de configuration Apache de RaspiSMS"
a2ensite raspisms.conf

echo "Redémarrage d'Apache"
service apache2 restart

if [ "$gammu_detect_check" -eq 0 ]
then
    echo "Redémarrage de Gammu"
    service gammu-smsd stop
    service gammu-smsd start
fi

#Ajout des taches CRON
echo "Ajout des tâches dans la crontab"
line="* * * * * cd /var/www/html/RaspiSMS && /var/www/html/RaspiSMS/console.php -c parseReceivedSMS"
(crontab -u root -l; echo "$line" ) | crontab -u root -
line="* * * * * cd /var/www/html/RaspiSMS && /var/www/html/RaspiSMS/console.php -c sendScheduleds"
(crontab -u root -l; echo "$line" ) | crontab -u root -

#On kill MySQL, et on relance proprement cette fois
kill `cat /var/run/mysqld/mysqld.pid`
service mysql start

echo "Installation terminée avec succès."
